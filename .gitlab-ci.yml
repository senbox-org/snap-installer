include:
  - project: 'to-be-continuous/docker'
    ref: '4.0.0'
    file: '/templates/gitlab-ci-docker.yml'

variables:
  BUILD_FOR_INSTALLER: "true"
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=${MAVEN_CFG_DIR}/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
    -Dmaven.test.skip=true
  DOCKER_REGISTRY_MIRROR: docker.snap-ci.ovh
  DOCKER_REGISTRY_USER: $NEXUS_USER
  DOCKER_REGISTRY_PASSWORD: $NEXUS_PASSWORD
  DOCKER_FILE: "docker/build/Dockerfile"
  DOCKER_CONTEXT_PATH: "${CI_PROJECT_DIR}"
  DOCKER_SNAPSHOT_IMAGE: "$NEXUS_URL/$CI_PROJECT_NAME:unix-snapshot-latest"
  DOCKER_RELEASE_IMAGE: "$NEXUS_URL/$CI_PROJECT_NAME:unix-latest"
  DOCKER_TRIVY_ARGS: "${DOCKER_TRIVY_ARGS} --timeout 15m"
  DOCKER_BUILD_ARGS: "--build-arg LICENSE=${INSTALL4J_LICENSE} --build-arg=UPLOAD_URL --build-arg=NEXUS_USER --build-arg=NEXUS_PASS"
  COMPILE_BRANCH: last-stable
  RECOMPILE: "false"

stages:
  - compile
  - build
  - package-build
  - package-test
  - publish

build-snap:
  stage: build
  needs:
    - job: compile
      optional: true
    - project: senbox-org/snap-engine
      job: mvn-build
      ref: $COMPILE_BRANCH
      artifacts: true
    - project: senbox-org/snap-desktop
      job: mvn-build
      ref: $COMPILE_BRANCH
      artifacts: true
  script: echo build-snap
  artifacts:
    expire_in: 2 hours
    paths:
      - LICENSE.html
      - etc
      - "${CI_PROJECT_DIR}/snap-application/target"
      - "${CI_PROJECT_DIR}/snap-main/target"
      - "${CI_PROJECT_DIR}/snap-smart-configurator-ui/src/main/resources/org/esa/snap/smart/configurator/ui/Performance32.png"

build-toolboxes:
  image: registry.hub.docker.com/library/maven:3.6.3
  stage: build
  needs:
    - job: compile
      optional: true
    - project: senbox-org/s1tbx
      job: mvn-build
      ref: $COMPILE_BRANCH
      artifacts: true
    - project: senbox-org/s2tbx
      job: mvn-build
      ref: $COMPILE_BRANCH
      artifacts: true
    - project: senbox-org/s3tbx
      job: mvn-build
      ref: $COMPILE_BRANCH
      artifacts: true
    - project: senbox-org/smos-box
      job: mvn-build
      ref: $COMPILE_BRANCH
      artifacts: true
    - project: senbox-org/probavbox
      job: mvn-build
      ref: $COMPILE_BRANCH
      artifacts: true
  script: VERSION=$(mvn --non-recursive help:evaluate -Dexpression=project.version -q -DforceStdout)
  artifacts:
    expire_in: 2 hours
    paths:
      - "$CI_PROJECT_DIR/s1tbx-kit/target/netbeans_clusters"
      - "$CI_PROJECT_DIR/s2tbx-kit/target/netbeans_clusters"
      - "$CI_PROJECT_DIR/s3tbx-kit/target/netbeans_clusters"
      - "$CI_PROJECT_DIR/smos-kit/target/netbeans_clusters"
      - "$CI_PROJECT_DIR/probavbox-kit/target/netbeans_clusters"

# Before building the image we need other projects artifacts  
docker-kaniko-build:
  needs:
    - build-snap
    - build-toolboxes

compile:
  stage: compile
  rules:
    - if: $RECOMPILE == "true"
      when: always
    - if: $RECOMPILE == "false"
      when: never
    - if: $BRANCH
      variables:
        COMPILE_BRANCH: $BRANCH
  trigger: 
    project: $PROJECT
    branch: $COMPILE_BRANCH
    strategy: depend
  parallel:
    matrix:
      - PROJECT: senbox-org/snap-engine
      - PROJECT: senbox-org/snap-desktop
      - PROJECT: senbox-org/s1tbx
      - PROJECT: senbox-org/s2tbx
      - PROJECT: senbox-org/s3tbx
      - PROJECT: senbox-org/smos-box
      - PROJECT: senbox-org/probavbox

docker-hadolint:
  when: always
  rules:
    - if: $RECOMPILE == "false"
      when: never